// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyTaiLieu.Repository;

namespace QuanLyTaiLieu.Repository.Migrations
{
    [DbContext(typeof(QuanLyCongVanDBContext))]
    partial class QuanLyCongVanDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.Account", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR(30)")
                        .HasColumnName("UserName");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("DateTime")
                        .HasColumnName("DateTime");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("FullName");

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("Password");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("Phone");

                    b.Property<string>("RoleId")
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("RoleId");

                    b.HasKey("UserName")
                        .HasName("pk_accountid");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("DocumentId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .HasColumnType("NVARCHAR(500)")
                        .HasColumnName("Abstract");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("ApprovedBy");

                    b.Property<string>("Content")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Content");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("DateTime")
                        .HasColumnName("DateFrom");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("DateTime")
                        .HasColumnName("DateTime");

                    b.Property<string>("NumberDocCode")
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("NumberDocCode");

                    b.Property<int>("NumberFrom")
                        .HasColumnType("INT")
                        .HasColumnName("NumberFrom");

                    b.Property<int>("NumberGo")
                        .HasColumnType("INT")
                        .HasColumnName("NumberGo");

                    b.Property<int>("NumberPage")
                        .HasColumnType("INT")
                        .HasColumnName("NumberPage");

                    b.Property<string>("NumberSymbols")
                        .HasColumnType("NVARCHAR(40)")
                        .HasColumnName("NumberSymbols");

                    b.Property<int>("PlaceDocId")
                        .HasColumnType("INT")
                        .HasColumnName("PlaceDocId");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT")
                        .HasColumnName("Quantity");

                    b.Property<string>("Receive")
                        .HasColumnType("NVARCHAR(40)")
                        .HasColumnName("Receive");

                    b.Property<string>("Sender")
                        .HasColumnType("NVARCHAR(40)")
                        .HasColumnName("Sender");

                    b.Property<string>("Signer")
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("Signer");

                    b.Property<int>("TypeDocId")
                        .HasColumnType("INT")
                        .HasColumnName("TypeDocId");

                    b.HasKey("DocumentId")
                        .HasName("pk_document");

                    b.HasIndex("NumberDocCode");

                    b.HasIndex("PlaceDocId");

                    b.HasIndex("TypeDocId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.NumberDoc", b =>
                {
                    b.Property<string>("NumberDocCode")
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("NumberDocCode");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("Description");

                    b.Property<string>("NumberDocName")
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("NumberDocName");

                    b.HasKey("NumberDocCode")
                        .HasName("pk_numberDoc");

                    b.ToTable("NumberDoc");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.PlaceDoc", b =>
                {
                    b.Property<int>("PlaceDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PlaceDocId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("Description");

                    b.Property<string>("PlaceDocName")
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("PlaceDocName");

                    b.HasKey("PlaceDocId")
                        .HasName("pk_PlaceDoc");

                    b.ToTable("PlaceDoc");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.TypeDoc", b =>
                {
                    b.Property<int>("TypeDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("TypeDocId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("Description");

                    b.Property<string>("TypeDocName")
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("TypeDocName");

                    b.HasKey("TypeDocId")
                        .HasName("pk_TypeDoc");

                    b.ToTable("TypeDoc");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.Document", b =>
                {
                    b.HasOne("QuanLyCongVan.Domain.Models.NumberDoc", "NumberDoc")
                        .WithMany("Documents")
                        .HasForeignKey("NumberDocCode")
                        .HasConstraintName("fk_document_number");

                    b.HasOne("QuanLyCongVan.Domain.Models.PlaceDoc", "PlaceDoc")
                        .WithMany("Documents")
                        .HasForeignKey("PlaceDocId")
                        .HasConstraintName("fk_document_place")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCongVan.Domain.Models.TypeDoc", "TypeDoc")
                        .WithMany("Documents")
                        .HasForeignKey("TypeDocId")
                        .HasConstraintName("fk_document_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NumberDoc");

                    b.Navigation("PlaceDoc");

                    b.Navigation("TypeDoc");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.NumberDoc", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.PlaceDoc", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("QuanLyCongVan.Domain.Models.TypeDoc", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
